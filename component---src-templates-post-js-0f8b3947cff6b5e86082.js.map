{"version":3,"sources":["webpack:///./src/components/BlockContent/BlockContent.js","webpack:///./src/templates/Post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/contexts/intl/IntlConsumer.js","webpack:///./src/contexts/intl/IntlContext.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/contexts/intl/data/common.js","webpack:///./src/contexts/intl/data/en.js","webpack:///./src/contexts/intl/data/pt.js","webpack:///./src/contexts/intl/data/languages.js","webpack:///./src/constants/paths.js","webpack:///./src/components/LanguageSwitcher/LanguageSwitcher.js","webpack:///./src/components/Header/Header.js","webpack:///./src/components/Footer/Footer.js","webpack:///./src/components/Layout/Layout.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/Seo/Seo.js","webpack:///./src/components/Seo/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/assets/images/luanorlandi.jpg"],"names":["serializers","types","block","_ref","node","children","style","react_default","a","createElement","className","BlockContent","_ref2","blocks","BlockContent_default","projectId","process","dataset","propTypes","PropTypes","arrayOf","object","isRequired","__webpack_require__","d","__webpack_exports__","query","Post","data","location","_data$sanityPost","sanityPost","title","locale","description","mainImage","publishedAt","_rawBody","IntlContext","pathname","formatDate","formatMessage","getPath","Layout","Seo","lang","meta","property","content","dateTime","year","month","day","gatsby_image_default","fluid","asset","alt","components_BlockContent_BlockContent","id","gatsby_browser_entry","to","shape","string","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","props","Consumer","func","IntlConsumer","intl","intlShape","defaultProps","injectIntl","addLocaleData","concat","en","pt","defaultLocale","defaultLanguage","IntlProvider","initialLanguage","match","replace","locales","includes","languagesObject","getLanguage","_useState","useState","setLocale","_useState2","messages","setMessages","changeLanguage","language","pathName","path","get","paths","Error","languagePath","index_es","intl_IntlConsumer","Provider","value","Object","assign","m","module","exports","require","default","common","profileName","meta.description","meta.keywords","home.title","home.headline","home.greet","home.about","home.experience","home.personalProjects","projects.title","projects.description","projects.gatsbyCourse.title","projects.gatsbyCourse.subtitle","projects.gatsbyCourse.imageAlt","projects.kasselLabs.title","projects.kasselLabs.subtitle","projects.kasselLabs.imageAlt","projects.ticTacPorg.title","projects.ticTacPorg.subtitle","projects.ticTacPorg.imageAlt","projects.slackParrot.title","projects.slackParrot.subtitle","projects.slackParrot.imageAlt","projects.stack","stack.title","stack.description","stack.stackShare","stack.posts","posts.title","posts.gatsbyBlazingFast.title","posts.gatsbyBlazingFast.subtitle","posts.gatsbyBlazingFast.imageAlt","posts.learnReact.title","posts.learnReact.subtitle","posts.learnReact.imageAlt","checkOut","checkOut.posts","noscript","externalLink","home","projects","stack","blog","404","github","twitter","medium","linkedin","gatsbyCourse","kasselLabs","ticTacPorg","slackParrot","gatsbyBlazingFast","learnReact","regexHomePage","regexOtherPage","LanguageSwitcher","useContext","getLink","test","es","languages","map","key","onClick","Header","siteTitle","isMenuOpen","setIsMenuOpen","burgerClass","type","aria-label","state","aria-hidden","components_LanguageSwitcher_LanguageSwitcher","Footer","components_Header_Header","site","siteMetadata","components_Footer_Footer","_755544856","components_Layout_Layout","SEO","keywords","Helmet_default","htmlAttributes","titleTemplate","name","author","ogImage","_32777869","ProdPageRenderer","pageResources","InternalPageRenderer","json","p"],"mappings":"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","file":"component---src-templates-post-js-0f8b3947cff6b5e86082.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseBlockContent from '@sanity/block-content-to-react';\n\n// import './block-content.styl';\n\nconst serializers = {\n  types: {\n    // eslint-disable-next-line react/prop-types\n    block({ node, children }) {\n      switch (node.style) {\n        case 'h1':\n          return <h1 className=\"block-content-h1\">{children}</h1>;\n\n        case 'h2':\n          return <h2 className=\"block-content-h2\">{children}</h2>;\n\n        case 'h3':\n          return <h3>{children}</h3>;\n\n        case 'h4':\n          return <h4>{children}</h4>;\n\n        case 'blockquote':\n          return <blockquote className=\"block-content-blockquote\">{children}</blockquote>;\n\n        case 'ul':\n          return <ul>{children}</ul>;\n\n        case 'ol':\n          return <ol>{children}</ol>;\n\n        case 'li':\n          return <li>{children}</li>;\n\n        default:\n          return <p className=\"block-content-p\">{children}</p>;\n      }\n    },\n  },\n};\n\nconst BlockContent = ({ blocks }) => (\n  <BaseBlockContent\n    projectId={process.env.GATSBY_SANITY_PROJECT_ID}\n    dataset={process.env.GATSBY_SANITY_DATASET}\n    blocks={blocks}\n    serializers={serializers}\n  />\n);\n\nBlockContent.propTypes = {\n  blocks: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default BlockContent;\n","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport Image from 'gatsby-image';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/Seo';\nimport BlockContent from 'components/BlockContent';\nimport { IntlProvider } from 'contexts/intl/IntlContext';\n\nexport const query = graphql`\n  query Post ($slug: String) {\n    sanityPost(slug: {current: {eq: $slug}}) {\n      title\n      locale\n      description\n      mainImage {\n        asset {\n          fluid {\n            ...GatsbySanityImageFluid\n          }\n        }\n      }\n      publishedAt\n      _rawBody\n    }\n  }\n`;\n\nconst Post = ({ data, location }) => {\n  const {\n    title,\n    locale,\n    description,\n    mainImage,\n    publishedAt,\n    _rawBody,\n  } = data.sanityPost;\n\n  return (\n    <IntlProvider pathname={location.pathname}>\n      {({ formatDate, formatMessage, getPath }) => (\n        <Layout>\n          <SEO\n            lang={locale}\n            title={title}\n            description={description}\n            meta={[{ property: 'og:type', content: 'article' }]}\n          />\n          <article className=\"post\">\n            <h1 className=\"post__title\">{title}</h1>\n            {publishedAt && (\n              <time dateTime={publishedAt} className=\"post__time\">\n                {formatDate(publishedAt, {\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric',\n                })}\n              </time>\n            )}\n            {mainImage && (\n              <div className=\"post__main-image\">\n                <Image fluid={mainImage.asset.fluid} alt={title} />\n              </div>\n            )}\n            {_rawBody && (\n              <BlockContent blocks={_rawBody} />\n            )}\n          </article>\n          <p className=\"has-text-centered\">\n            {formatMessage({ id: 'checkOut.posts' })}\n            {' '}\n            <Link to={getPath('blog')}>\n              {formatMessage({ id: 'stack.posts' })}\n            </Link>\n          </p>\n          <br />\n        </Layout>\n      )}\n    </IntlProvider>\n  );\n};\n\nPost.propTypes = {\n  data: PropTypes.object.isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Post;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\n\nconst IntlConsumer = ({ children, intl }) => (\n  <div>\n    {children(intl)}\n  </div>\n);\n\nIntlConsumer.propTypes = {\n  children: PropTypes.func,\n  intl: intlShape.isRequired,\n};\n\nIntlConsumer.defaultProps = {\n  children: () => {},\n};\n\nexport default injectIntl(IntlConsumer);\n","import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { IntlProvider as Provider, addLocaleData } from 'react-intl';\nimport en from 'react-intl/locale-data/en';\nimport pt from 'react-intl/locale-data/pt';\nimport get from 'lodash/get';\n\nimport { paths } from 'constants/paths';\nimport { languagesObject, locales, defaultLanguage } from './data/languages';\nimport IntlConsumer from './IntlConsumer';\n\naddLocaleData([...en, ...pt]);\n\nconst defaultLocale = defaultLanguage.locale;\n\nconst IntlContext = createContext({});\n\nconst getLanguage = (pathname) => {\n  const localeRegex = /^\\/[a-zA-z-]*/;\n\n  const locale = pathname.match(localeRegex)[0].replace('/', '');\n\n  if (locales.includes(locale)) {\n    return languagesObject[locale];\n  }\n\n  return defaultLanguage;\n};\n\nexport const IntlProvider = ({ children, pathname }) => {\n  const initialLanguage = getLanguage(pathname);\n\n  const [locale, setLocale] = useState(initialLanguage.locale);\n  const [messages, setMessages] = useState(initialLanguage.messages);\n\n  const changeLanguage = (language) => {\n    setLocale(language.locale);\n    setMessages(language.messages);\n  };\n\n  const getPath = (pathName) => {\n    const path = get(paths, pathName);\n\n    if (!path) {\n      throw new Error(`Path '${pathName}' not found`);\n    }\n\n    const languagePath = locale !== defaultLocale ? locale : '';\n\n    return languagePath ? `/${languagePath}${path}` : `${path}`;\n  };\n\n  return (\n    <Provider locale={locale} messages={messages}>\n      <IntlConsumer>\n        {intl => (\n          <IntlContext.Provider value={{ ...intl, changeLanguage, getPath }}>\n            {children({ ...intl, changeLanguage, getPath })}\n          </IntlContext.Provider>\n        )}\n      </IntlConsumer>\n    </Provider>\n  );\n};\n\nIntlProvider.propTypes = {\n  children: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n};\n\nexport default IntlContext;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","export default {\n  profileName: 'Luan Orlandi',\n};\n","import common from './common';\n\nexport default {\n  locale: 'en',\n  messages: {\n    'meta.description': 'Front-end developer, developing apps and web pages',\n    'meta.keywords': 'React, Node, Gatsby, Front-end, developer, API',\n    'home.title': 'Home',\n    'home.headline': 'Web Developer',\n    'home.greet': 'Hello, I am Luan Orlandi!',\n    'home.about': `I'm a Web Developer, I work with Front-end creating apps and web pages.\n    I participate in events about technology and I like to study productivity and communication, it helps me stay organized and collaborative.`,\n    'home.experience': 'I develop projects mostly with JavaScript using React and Node.',\n    'home.personalProjects': 'personal projects',\n    'projects.title': 'Projects',\n    'projects.description': 'Some of my featured projects, see more on my',\n    'projects.gatsbyCourse.title': 'Gatsby Course',\n    'projects.gatsbyCourse.subtitle': 'Build your personal website using React',\n    'projects.gatsbyCourse.imageAlt': 'Gatsby Course',\n    'projects.kasselLabs.title': 'Kassel Labs',\n    'projects.kasselLabs.subtitle': 'Helping people express their creativity and imagination',\n    'projects.kasselLabs.imageAlt': 'Kassel Labs logo',\n    'projects.ticTacPorg.title': 'Tic-tac-porg',\n    'projects.ticTacPorg.subtitle': 'Play tic-tac-toe with Star Wars theme',\n    'projects.ticTacPorg.imageAlt': 'Tic tac toe with porgs and Chewbacca',\n    'projects.slackParrot.title': 'Slack Parrot',\n    'projects.slackParrot.subtitle': 'Behold the Party Parrot on your terminal',\n    'projects.slackParrot.imageAlt': 'Party parrot animation',\n    'projects.stack': 'stack',\n    'stack.title': 'Stack',\n    'stack.description': 'I have experience with many modern tools, I select them for my projects depending on the usage.',\n    'stack.stackShare': 'Here is my stack on StackShare:',\n    'stack.posts': 'blog',\n    'posts.title': 'Blog',\n    'posts.gatsbyBlazingFast.title': 'How Gatsby is so blazing fast',\n    'posts.gatsbyBlazingFast.subtitle': 'Performance greatly affects the user experience. Gatsby builds fast websites out-of-the-box',\n    'posts.gatsbyBlazingFast.imageAlt': 'Fast as the DeLorean',\n    'posts.learnReact.title': 'Learn React easily with this rule',\n    'posts.learnReact.subtitle': 'Make it fun',\n    'posts.learnReact.imageAlt': 'Play it like Lego',\n    checkOut: 'Check out my',\n    'checkOut.posts': 'Check out more posts in my',\n    noscript: 'This website works better with JavaScript enabled',\n    ...common,\n  },\n};\n","import common from './common';\n\nexport default {\n  locale: 'pt',\n  messages: {\n    'meta.description': 'Desenvolvedor Front-end, criando apps e páginas Web',\n    'meta.keywords': 'React, Node, Gatsby, Front-end, desenvolvedor, API',\n    'home.title': 'Inicial',\n    'home.headline': 'Desenvolvedor Web',\n    'home.greet': 'Olá, eu sou Luan Orlandi!',\n    'home.about': `Sou desenvolvedor web, trabalho com Front-end criando aplicações e páginas Web.\n    Participo de eventos de tecnologia e gosto de estudar produtividade e comunicação, que me ajuda a manter organizado e colaborativo.`,\n    'home.experience': 'Desenvolvo projetos usando principalmente JavaScript com React e Node.',\n    'home.personalProjects': 'meus projetos pessoais',\n    'projects.title': 'Projetos',\n    'projects.description': 'Alguns dos meus projetos de destaque, veja mais no meu',\n    'projects.gatsbyCourse.title': 'Curso de Gatsby',\n    'projects.gatsbyCourse.subtitle': 'Crie seu site pessoal usando React',\n    'projects.gatsbyCourse.imageAlt': 'Curso de Gatsby',\n    'projects.kasselLabs.title': 'Kassel Labs',\n    'projects.kasselLabs.subtitle': 'Ajudando pessoas a expressarem sua critivade e imaginação',\n    'projects.kasselLabs.imageAlt': 'Logo do Kassel Labs',\n    'projects.ticTacPorg.title': 'Tic-tac-porg',\n    'projects.ticTacPorg.subtitle': 'Jogo da Velha com tema de Star Wars',\n    'projects.ticTacPorg.imageAlt': 'Tic tac toe com porgs e Chewbacca',\n    'projects.slackParrot.title': 'Slack Parrot',\n    'projects.slackParrot.subtitle': 'Party Parrot no seu terminal!',\n    'projects.slackParrot.imageAlt': 'Animação do Party Parrot no terminal',\n    'projects.stack': 'minha stack de ferramentas',\n    'stack.title': 'Stack',\n    'stack.description': 'Tenho experiências com diversas ferramentas e tecnologias modernas, que uso dependendo do projeto.',\n    'stack.stackShare': 'Compartilho minha stack no StackShare:',\n    'stack.posts': 'meu blog',\n    'posts.title': 'Blog',\n    'posts.gatsbyBlazingFast.title': 'Como Gatsby é tão rápido',\n    'posts.gatsbyBlazingFast.subtitle': 'Performance afeta muito a experiência do usuário. Gatsby cria sites rápidos por padrão',\n    'posts.gatsbyBlazingFast.imageAlt': 'Rápido como DeLorean',\n    'posts.learnReact.title': 'Aprenda React facilmente com essa regra',\n    'posts.learnReact.subtitle': 'Torne divertido',\n    'posts.learnReact.imageAlt': 'Jogue como lego',\n    checkOut: 'Veja',\n    'checkOut.posts': 'Veja mais posts no meu',\n    noscript: 'Este site funciona melhor com JavaScript habilitado',\n    ...common,\n  },\n};\n","import en from './en';\nimport pt from './pt';\n\nexport default [\n  en,\n  pt,\n];\n\nexport const languagesObject = {\n  en,\n  pt,\n};\n\nexport const locales = [\n  en.locale,\n  pt.locale,\n];\n\nexport const defaultLanguage = en;\n","export const paths = {\n  home: '/',\n  projects: '/projects',\n  stack: '/stack',\n  blog: '/blog',\n  404: '/404',\n};\n\nexport const externalLink = {\n  github: 'https://github.com/luanorlandi',\n  twitter: 'https://twitter.com/luanorlandi',\n  medium: 'https://medium.com/@luanorlandi',\n  linkedin: 'https://www.linkedin.com/in/luanorlandi/',\n  gatsbyCourse: 'https://www.udemy.com/gatsby-crie-seu-site-pessoal',\n  kasselLabs: 'https://kassellabs.io',\n  ticTacPorg: 'https://luanorlandi.github.io/tic-tac-porg',\n  slackParrot: 'https://www.npmjs.com/package/slack-parrot',\n  gatsbyBlazingFast: 'https://medium.freecodecamp.org/how-gatsby-is-so-blazing-fast-c99a6f2d405e',\n  learnReact: 'https://medium.com/@luanorlandi/learn-react-easily-with-this-rule-a715b818a358',\n};\n","import React, { useContext } from 'react';\nimport { Link } from 'gatsby';\nimport { Location } from '@reach/router';\n\nimport IntlContext from 'contexts/intl/IntlContext';\nimport languages, { defaultLanguage } from 'contexts/intl/data/languages';\n\nconst defaultLocale = defaultLanguage.locale;\n\nconst regexHomePage = /^\\/[a-zA-z-]*\\/?$/;\nconst regexOtherPage = /^\\/[a-zA-z-]*/;\n\nconst LanguageSwitcher = () => {\n  const intl = useContext(IntlContext);\n\n  const getLink = ({ language, location }) => {\n    if (language.locale === intl.locale) {\n      return location.pathname;\n    }\n\n    if (language.locale === defaultLocale) {\n      if (regexHomePage.test(location.pathname)) {\n        return '/';\n      }\n\n      return location.pathname.replace(regexOtherPage, '');\n    }\n\n    return `/${language.locale}${location.pathname}`;\n  };\n\n  return (\n    <Location>\n      {({ location }) => (\n        <div className=\"language\">\n          {languages.map(language => (\n            <Link\n              className=\"language__link\"\n              to={getLink({ language, location })}\n              key={language.locale}\n              onClick={() => intl.changeLanguage(language)}\n            >\n              {language.locale}\n            </Link>\n          ))}\n        </div>\n      )}\n    </Location>\n  );\n};\n\nexport default LanguageSwitcher;\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport { FormattedMessage } from 'react-intl';\n\nimport IntlContext from 'contexts/intl/IntlContext';\nimport LanguageSwitcher from 'components/LanguageSwitcher';\n\nconst Header = ({ siteTitle }) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const intl = useContext(IntlContext);\n\n  const burgerClass = isMenuOpen ? 'is-active' : '';\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Link className=\"navbar-item is-size-4\" to={intl.getPath('home')}>\n            {siteTitle}\n          </Link>\n          <button\n            className={`navbar-burger has-text-light ${burgerClass}`}\n            type=\"button\"\n            aria-label=\"menu\"\n            onClick={() => setIsMenuOpen(state => !state)}\n          >\n            <span aria-hidden=\"true\" />\n            <span aria-hidden=\"true\" />\n            <span aria-hidden=\"true\" />\n          </button>\n        </div>\n        <div className={`navbar-menu ${burgerClass}`}>\n          <div className=\"navbar-end\">\n            <Link\n              className=\"navbar-item is-size-5\"\n              to={intl.getPath('home')}\n              onClick={() => setIsMenuOpen(false)}\n            >\n              <FormattedMessage id=\"home.title\" />\n            </Link>\n            <Link\n              className=\"navbar-item is-size-5\"\n              to={intl.getPath('projects')}\n              onClick={() => setIsMenuOpen(false)}\n            >\n              <FormattedMessage id=\"projects.title\" />\n            </Link>\n            <Link\n              className=\"navbar-item is-size-5\"\n              to={intl.getPath('stack')}\n              onClick={() => setIsMenuOpen(false)}\n            >\n              <FormattedMessage id=\"stack.title\" />\n            </Link>\n            <Link\n              className=\"navbar-item is-size-5\"\n              to={intl.getPath('blog')}\n              onClick={() => setIsMenuOpen(false)}\n            >\n              <FormattedMessage id=\"posts.title\" />\n            </Link>\n            <LanguageSwitcher />\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default Header;\n","import React, { useContext } from 'react';\n\nimport IntlContext from 'contexts/intl/IntlContext';\n\nconst Footer = () => {\n  const intl = useContext(IntlContext);\n\n  return (\n    <footer className=\"footer\">\n      <div className=\"content has-text-centered\">\n        <p>\n          <noscript>\n            {intl.formatMessage({ id: 'noscript' })}\n          </noscript>\n        </p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from 'components/Header';\nimport Footer from 'components/Footer';\nimport 'styles/index.scss';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        {children}\n        <Footer />\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","export { default } from './Layout';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport ogImage from 'assets/images/luanorlandi.jpg';\n\nconst HOST = process.env.NODE_ENV === 'production' ? 'https://luanorlandi.github.io' : '';\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n  }\n`;\n\nconst SEO = ({\n  description,\n  lang,\n  meta,\n  keywords,\n  title,\n}) => (\n  <StaticQuery\n    query={detailsQuery}\n    render={data => (\n      <Helmet\n        htmlAttributes={{ lang }}\n        title={title || data.site.siteMetadata.title}\n        titleTemplate={title && `%s | ${data.site.siteMetadata.title}`}\n        meta={[\n          { name: 'description', content: description },\n          { name: 'keywords', content: keywords },\n          { name: 'twitter:card', content: 'summary' },\n          { name: 'twitter:creator', content: data.site.siteMetadata.author },\n          { name: 'twitter:title', content: title },\n          { name: 'twitter:description', content: description },\n          { property: 'og:title', content: title },\n          { property: 'og:description', content: description },\n          { property: 'og:type', content: 'website' },\n          { property: 'og:url', content: 'https://luanorlandi.github.io/' },\n          { property: 'og:image', content: `${HOST}${ogImage}` },\n          { property: 'og:image:alt', content: description },\n          { property: 'og:image:type', content: 'image/jpg' },\n          { property: 'og:image:width', content: '1365' },\n          { property: 'og:image:height', content: '1365' },\n        ].concat(meta)}\n      />\n    )}\n  />\n);\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  lang: PropTypes.string.isRequired,\n  keywords: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n};\n\nSEO.defaultProps = {\n  title: null,\n  description: '',\n  meta: [],\n  keywords: '',\n};\n\nexport default SEO;\n","export { default } from './Seo';\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/luanorlandi-7606c19d2c8b47776729b2bdec1fa9a7.jpg\";"],"sourceRoot":""}