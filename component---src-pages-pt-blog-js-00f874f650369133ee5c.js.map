{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/pages/pt/blog.js"],"names":["Blog","intl","useContext","IntlContext","locale","formatMessage","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","components_Layout__WEBPACK_IMPORTED_MODULE_6__","components_Seo__WEBPACK_IMPORTED_MODULE_7__","lang","title","id","description","keywords","className","react_intl__WEBPACK_IMPORTED_MODULE_5__","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","data","Fragment","components_Card__WEBPACK_IMPORTED_MODULE_8__","subtitle","link","externalLink","gatsbyBlazingFast","tags","image","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","post1","childImageSharp","alt","learnReact","post2","_public_static_d_3862864181_json__WEBPACK_IMPORTED_MODULE_1__","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","pages_blog__WEBPACK_IMPORTED_MODULE_1__","contexts_intl_data_pt__WEBPACK_IMPORTED_MODULE_2__","contexts_intl_IntlContext__WEBPACK_IMPORTED_MODULE_3__","BlogPt","props","useEffect","changeLanguage","pt"],"mappings":"sNA+EeA,UAjDF,WACX,IAAMC,EAAOC,qBAAWC,KAChBC,EAA0BH,EAA1BG,OAAQC,EAAkBJ,EAAlBI,cAEhB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,KAAMP,EACNQ,MAAOP,EAAc,CAAEQ,GAAI,gBAC3BC,YAAaT,EAAc,CAAEQ,GAAI,qBACjCE,SAAUV,EAAc,CAAEQ,GAAI,oBAEhCP,EAAAC,EAAAC,cAAA,WAASQ,UAAU,6CACjBV,EAAAC,EAAAC,cAAA,MAAIQ,UAAU,0CACZV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAkBJ,GAAG,iBAEvBP,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,aACbV,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,WACbV,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,wCACbV,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,MAxCA,aAyCAC,OAAQ,SAAAC,GAAI,OACVf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAe,SAAA,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEX,MAAOP,EAAc,CAAEQ,GAAI,kCAC3BW,SAAUnB,EAAc,CAAEQ,GAAI,qCAC9BY,KAAMC,IAAaC,kBACnBC,KAAM,CAAC,UACPC,MAAOvB,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CAAKwB,MAAOV,EAAKW,MAAMC,gBAAgBF,MAAOG,IAAK7B,EAAc,CAAEQ,GAAI,yCAEhFP,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEX,MAAOP,EAAc,CAAEQ,GAAI,2BAC3BW,SAAUnB,EAAc,CAAEQ,GAAI,8BAC9BY,KAAMC,IAAaS,WACnBP,KAAM,CAAC,SACPC,MAAOvB,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CAAKwB,MAAOV,EAAKe,MAAMH,gBAAgBF,MAAOG,IAAK7B,EAAc,CAAEQ,GAAI,oCAhBtFQ,KAAAgB,4CClDdC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,IAkBeS,UAZA,SAACC,GACd,IAAM/C,EAAOC,qBAAWC,KAMxB,OAJA8C,oBAAU,WACRhD,EAAKiD,eAAeC,MACnB,IAGDT,EAAAnC,EAAAC,cAACoC,EAAA,QAASI","file":"component---src-pages-pt-blog-js-00f874f650369133ee5c.js","sourcesContent":["import React, { useContext } from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport { FormattedMessage } from 'react-intl';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/Seo';\nimport Card from 'components/Card';\nimport IntlContext from 'contexts/intl/IntlContext';\nimport { externalLink } from 'constants/paths';\n\nconst queryImage = graphql`\n  query {\n    post1: file(relativePath: { eq: \"how-gatsby-is-blazing-fast.jpg\" }) {\n      childImageSharp {\n        fixed(width: 96, height: 96) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    post2: file(relativePath: { eq: \"learn-react.jpg\" }) {\n      childImageSharp {\n        fixed(width: 96, height: 96) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`;\n\nconst Blog = () => {\n  const intl = useContext(IntlContext);\n  const { locale, formatMessage } = intl;\n\n  return (\n    <Layout>\n      <SEO\n        lang={locale}\n        title={formatMessage({ id: 'posts.title' })}\n        description={formatMessage({ id: 'meta.description' })}\n        keywords={formatMessage({ id: 'meta.keywords' })}\n      />\n      <section className=\"section is-size-4-desktop is-size-5-touch\">\n        <h1 className=\"title has-text-centered has-text-light\">\n          <FormattedMessage id=\"posts.title\" />\n        </h1>\n        <div className=\"container\">\n          <hr />\n          <div className=\"columns\">\n            <div className=\"column is-half is-offset-one-quarter\">\n              <StaticQuery\n                query={queryImage}\n                render={data => (\n                  <>\n                    <Card\n                      title={formatMessage({ id: 'posts.gatsbyBlazingFast.title' })}\n                      subtitle={formatMessage({ id: 'posts.gatsbyBlazingFast.subtitle' })}\n                      link={externalLink.gatsbyBlazingFast}\n                      tags={['Gatsby']}\n                      image={<Img fixed={data.post1.childImageSharp.fixed} alt={formatMessage({ id: 'posts.gatsbyBlazingFast.imageAlt' })} />}\n                    />\n                    <Card\n                      title={formatMessage({ id: 'posts.learnReact.title' })}\n                      subtitle={formatMessage({ id: 'posts.learnReact.subtitle' })}\n                      link={externalLink.learnReact}\n                      tags={['React']}\n                      image={<Img fixed={data.post2.childImageSharp.fixed} alt={formatMessage({ id: 'posts.learnReact.imageAlt' })} />}\n                    />\n                  </>\n                )}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\nexport default Blog;\n","import React, { useEffect, useContext } from 'react';\n\nimport Blog from 'pages/blog';\nimport pt from 'contexts/intl/data/pt';\nimport IntlContext from 'contexts/intl/IntlContext';\n\nconst BlogPt = (props) => {\n  const intl = useContext(IntlContext);\n\n  useEffect(() => {\n    intl.changeLanguage(pt);\n  }, []);\n\n  return (\n    <Blog {...props} />\n  );\n};\n\nexport default BlogPt;\n"],"sourceRoot":""}